{"version":3,"sources":["components/shared-components/AlertMessage/index.js","redux/selectors/User.js","views/app-views/pages/user-list/EditProfile.js","components/shared-components/AvatarStatus/index.js","views/app-views/pages/user-list/UsersTable.js","views/app-views/pages/user-list/index.js"],"names":["AlertMessage","isError","message","onClose","type","closable","style","position","zIndex","top","left","minWidth","maxWidth","width","selectUsers","state","users","selectLoading","loading","selectShowMessage","showMessage","selectMessage","EditProfile","this","props","profile","setEditableProfile","saveChanges","data","selectedUser","placement","visible","className","name","layout","initialValues","email","username","phone","companyName","company","website","street","address","suite","city","postcode","zipcode","onFinish","values","key","content","setTimeout","user","success","duration","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType","Component","renderAvatar","text","AvatarStatus","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","UsersTable","onShow","onDelete","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","responsive","length","elm","EditOutlined","danger","DeleteOutlined","columns","dataSource","rowKey","UserList","dispatch","useDispatch","useSelector","errorMessage","useState","editableProfile","useEffect","fetchingUsers","closeError","spinning","bodyStyle","padding","userInfo","userId","deleteUser","changeUser"],"mappings":"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","file":"static/js/16.2fdc2fe7.chunk.js","sourcesContent":["import { Alert } from 'antd';\r\nimport React from 'react';\r\n\r\nconst AlertMessage = ({ isError, message, onClose }) => {\r\n  return (\r\n    <div>\r\n      {isError && (\r\n        <Alert\r\n          message={message}\r\n          type=\"error\"\r\n          closable\r\n          onClose={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            zIndex: 2000,\r\n            top: 0,\r\n            left: 0,\r\n            minWidth: '150px',\r\n            maxWidth: '500px',\r\n            width: '100%',\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertMessage;\r\n","export const selectUsers = (state) => state.users.users;\r\nexport const selectLoading = (state) => state.users.loading;\r\nexport const selectShowMessage = (state) => state.users.showMessage;\r\nexport const selectMessage = (state) => state.users.message;\r\n","import { Button, Col, Drawer, Form, Input, message, Row } from 'antd';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport React, { Component } from 'react';\r\n\r\nexport class EditProfile extends Component {\r\n  render() {\r\n    const { profile, setEditableProfile, saveChanges } = this.props;\r\n\r\n    const data = profile.selectedUser;\r\n\r\n    const closeHandle = () => {\r\n      setEditableProfile({ visible: false, selectedUser: null });\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n      const key = 'updatable';\r\n      message.loading({ content: 'Updating...', key });\r\n\r\n      setTimeout(() => {\r\n        const user = {\r\n          ...profile.selectedUser,\r\n          name: values.name,\r\n          email: values.email,\r\n          username: values.username,\r\n          phone: values.phone,\r\n          website: values.website,\r\n          company: {\r\n            ...profile.selectedUser.company,\r\n            name: values.companyName,\r\n          },\r\n          address: {\r\n            ...profile.selectedUser.address,\r\n            street: values.street,\r\n            city: values.city,\r\n            zipcode: values.postcode,\r\n          },\r\n        };\r\n\r\n        saveChanges(user);\r\n\r\n        message.success({ content: 'Done!', key, duration: 2 });\r\n      }, 1000);\r\n\r\n      setEditableProfile({ visible: false, selectedUser: null });\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Drawer\r\n          width={'min(50vw, 4000px)'}\r\n          placement=\"right\"\r\n          onClose={closeHandle}\r\n          visible={profile.visible}>\r\n          <div className=\"mt-4\">\r\n            {profile.visible && (\r\n              <Form\r\n                name=\"basicInformation\"\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                  name: data?.name,\r\n                  email: data?.email,\r\n                  username: data?.username,\r\n                  phone: data?.phone,\r\n                  companyName: data?.company?.name,\r\n                  website: data?.website,\r\n                  street: data?.address?.street,\r\n                  suite: data?.address?.suite,\r\n                  city: data?.address?.city,\r\n                  postcode: data?.address?.zipcode,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}>\r\n                <Row>\r\n                  <Col xs={24} sm={24} md={24} lg={24}>\r\n                    <Row gutter={ROW_GUTTER}>\r\n                      <Col xs={24} sm={24} md={24}>\r\n                        <Form.Item\r\n                          label=\"Name\"\r\n                          name=\"name\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Please input your name!',\r\n                            },\r\n                          ]}>\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Username\"\r\n                          name=\"username\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: 'Please input your username!',\r\n                            },\r\n                          ]}>\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              type: 'email',\r\n                              message: 'Please enter a valid email!',\r\n                            },\r\n                          ]}>\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item label=\"Company name\" name=\"companyName\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item label=\"Phone Number\" name=\"phone\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={24}>\r\n                        <Form.Item label=\"Website\" name=\"website\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item label=\"Street\" name=\"street\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item label=\"Suite\" name=\"suite\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item label=\"City\" name=\"city\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={24} md={12}>\r\n                        <Form.Item label=\"Post code\" name=\"postcode\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Save Change\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProfile;\r\n","import { Avatar } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst renderAvatar = (props) => {\r\n  return (\r\n    <Avatar {...props} className={`ant-avatar-${props.type}`}>\r\n      {props.text}\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nexport const AvatarStatus = (props) => {\r\n  const {\r\n    name,\r\n    suffix,\r\n    subTitle,\r\n    id,\r\n    type,\r\n    src,\r\n    icon,\r\n    size,\r\n    shape,\r\n    gap,\r\n    text,\r\n    onNameClick,\r\n  } = props;\r\n  return (\r\n    <div className=\"avatar-status d-flex align-items-center\">\r\n      {src && renderAvatar({ icon, src, type, size, shape, gap, text })}\r\n      <div className=\"ml-2\">\r\n        <div>\r\n          {onNameClick ? (\r\n            <div\r\n              onClick={() => onNameClick({ name, subTitle, src, id })}\r\n              className=\"avatar-status-name clickable\">\r\n              {name}\r\n            </div>\r\n          ) : (\r\n            <div className=\"avatar-status-name d-flex\">{name}</div>\r\n          )}\r\n          <span>{suffix}</span>\r\n        </div>\r\n        <div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAvatarStatus.propTypes = {\r\n  name: PropTypes.string,\r\n  src: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onNameClick: PropTypes.func,\r\n};\r\n\r\nexport default AvatarStatus;\r\n","import { Button, Table, Tooltip } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport React from 'react';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nconst UsersTable = ({ users, onShow, onDelete }) => {\r\n  const tableColumns = [\r\n    {\r\n      title: 'User',\r\n      dataIndex: 'name',\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">\r\n          <AvatarStatus name={record.username} subTitle={record.name} />\r\n        </div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.username.toLowerCase();\r\n          b = b.username.toLowerCase();\r\n          return a < b ? -1 : a > b ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      responsive: ['xl', 'xxl', 'lg', 'md', 'sm'],\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.email.toLowerCase();\r\n          b = b.email.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n      responsive: ['xl', 'xxl', 'lg', 'md'],\r\n\r\n      sorter: {\r\n        compare: (a, b) => a.phone.length - b.phone.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'Website',\r\n      dataIndex: 'website',\r\n      responsive: ['xl', 'xxl'],\r\n\r\n      sorter: {\r\n        compare: (a, b) => a.website.length - b.website.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'City',\r\n      dataIndex: 'address',\r\n      responsive: ['xl', 'xxl'],\r\n      render: (address) => <span>{address.city} </span>,\r\n      sorter: {\r\n        compare: (a, b) => a.address.street.length - b.address.street.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'Street',\r\n      dataIndex: 'address',\r\n      responsive: ['xl', 'xxl'],\r\n      render: (address) => <span>{address.street} </span>,\r\n      sorter: {\r\n        compare: (a, b) => a.address.street.length - b.address.street.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'Company name',\r\n      dataIndex: 'company',\r\n      responsive: ['xxl'],\r\n      render: (company) => <span>{company.name} </span>,\r\n      sorter: {\r\n        compare: (a, b) => a.company.name.length - b.company.name.length,\r\n      },\r\n    },\r\n\r\n    {\r\n      title: '',\r\n      dataIndex: 'actions',\r\n      render: (_, elm) => (\r\n        <div className=\"text-right\" style={{ width: '100px' }}>\r\n          <Tooltip title=\"View\">\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"mr-2\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => {\r\n                onShow(elm);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <Button\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => {\r\n                onDelete(elm.id);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  return <Table columns={tableColumns} dataSource={users} rowKey=\"id\" />;\r\n};\r\n\r\nexport default UsersTable;\r\n","import { Card, message, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeUser,\r\n  closeError,\r\n  deleteUser,\r\n  fetchingUsers,\r\n} from 'redux/actions/Users';\r\nimport {\r\n  selectLoading,\r\n  selectMessage,\r\n  selectShowMessage,\r\n  selectUsers,\r\n} from 'redux/selectors/User';\r\nimport AlertMessage from '../../../../components/shared-components/AlertMessage';\r\nimport EditProfile from './EditProfile';\r\nimport UsersTable from './UsersTable';\r\n\r\nexport const UserList = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector(selectUsers);\r\n  const loading = useSelector(selectLoading);\r\n  const isError = useSelector(selectShowMessage);\r\n  const errorMessage = useSelector(selectMessage);\r\n\r\n  const [editableProfile, setEditableProfile] = useState({\r\n    visible: false,\r\n    selectedUser: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchingUsers());\r\n  }, [dispatch]);\r\n\r\n  const onAlertCloseHandler = () => {\r\n    dispatch(closeError());\r\n  };\r\n\r\n  const deleteUserHandler = (userId) => {\r\n    dispatch(deleteUser(userId));\r\n    message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n  };\r\n\r\n  const changeUserProfileHandler = (user) => {\r\n    dispatch(changeUser(user));\r\n  };\r\n\r\n  const showUserProfile = (userInfo) => {\r\n    setEditableProfile({\r\n      visible: true,\r\n      selectedUser: userInfo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AlertMessage\r\n        isError={isError}\r\n        message={errorMessage}\r\n        onClose={onAlertCloseHandler}\r\n      />\r\n      <Spin size=\"large\" spinning={loading}>\r\n        <Card bodyStyle={{ padding: '0px' }}>\r\n          <UsersTable\r\n            users={users}\r\n            onShow={showUserProfile}\r\n            onDelete={deleteUserHandler}\r\n          />\r\n          <EditProfile\r\n            profile={editableProfile}\r\n            setEditableProfile={setEditableProfile}\r\n            saveChanges={changeUserProfileHandler}\r\n          />\r\n        </Card>\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}